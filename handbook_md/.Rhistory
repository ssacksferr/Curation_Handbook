province = c ("Abidjan", "Bas sassandra", "Bas Sassandra", "Cavally", "Guemon", "Tonkpi")
population = c(70, 2, 7, 4, 1, 7)
table_location = tibble(province, population)
library(dplyr)
table_location = tibble(province, population)
table_location
library(readxl)
outliers_4_1_10 <- read_excel("outliers_4_1_10.xlsx")
outliers <- read_excel("outliers_4_1_10.xlsx")
table(outliers)
tibble(outliers)
summary(outliers$income_1month)
outliers <- read_excel("outliers_4_1_10.xlsx")
tibble(outliers)
summary(outliers$income_1month)
summary(outliers$income_1month[outliers$income_source=='Factory employee'])
review_outliers <- 1.5*IQR(outliers$income_1month)
hist(outliers$income_1month, xlab='Income 1 month', xlim=c(0, 1000))
outliers$income_1month_thousands <- outliers$income_1month/1000
hist(outliers$income_1month_thousands,xlab=‘Income 1 month in thousands’, breaks = 25)
outliers$income_1month_thousands <- outliers$income_1month/1000
hist(outliers$income_1month_thousands,xlab="Income 1 month in thousands", breaks = 25)
hist(outliers$income_1month, xlab='Income 1 month', xlim=c(0, 1000))
print(review_outliers)
income_1month
outliers$income_1month_thousands
plot(outliers$id, outliers$income_1month_thousands, xlab='ID', ylab='Income 1 month in thousands')
hist(outliers$income_1month_thousands,xlab="Income 1 month in thousands", breaks = 25)
boxplot(hh_dat$income_1month_thousands, ylab='Income 1 month in thousands')
boxplot(income_1month_thousands~income_source, data = outliers)
install.packages("scrreprt")
install.packages("scrreprt.cls")
install.packages("tinytex")
library(tinytex)
tinytex::tlmgr_update()
all
tinytex::reinstall_tinytex(repository = "illinois")
sdcMicro
install.packages("sdcMicro")
library(sdcMicro)
data = testdata
names(testdata)
names(testdata2)
library(readxl)
sdcobj_4_2 <- read_excel("sdcobj_4_2.xlsx",
col_types = c("numeric", "numeric", "factor",
"factor", "factor", "numeric", "factor",
"factor", "factor"))
View(sdcobj_4_2)
library(readxl)
sdcobj_4_2 <- read_excel("sdcobj_4_2.xlsx",
col_types = c("numeric", "numeric", "text",
"text", "text", "numeric", "text",
"text", "text"))
View(sdcobj_4_2)
sdcobj_4_2[sapply(sdcobj_4_2, is.character)] <- lapply(sdcobj_4_2[sapply(sdcobj_4_2,is.character)],as.factor)
View(sdcobj_4_2)
saveRDS(sdcobj4_2, "data_sdcObj.RDS")
saveRDS(sdcobj_4_2, "data_sdcObj.RDS")
data_sdcObj <- readRDS("~/GitHub/Data-Curation-SSF/data-curation-ssf/Handbook/handbook_md/data_sdcObj.RDS")
sdcObj <- createSdcObj(dat=data_sdcObj,
keyVars=c("HH_SIZE", "MARITAL_STATUS", "REGION"),
weightVar=c("WEIGHT"),
hhId=NULL,
strataVar=NULL,
pramVars=NULL,
excludeVars=NULL,
seed=60,
randomizeRecords=FALSE,
alpha=c(1))
sdcObj
install.packages("sdcMicro")
install.packages("sdcMicro")
sdcObj
sdcObj
sdcObj@risk
sdcObj@risk$individual %>% as.data.frame() %>% arrange(desc(risk)) %>% head(10)
kanon3 %>% print(n=Inf)
library(quarto)
quarto_render
quarto::quarto_render("anonymize.qmd")
quarto_render()
library(quarto)
quarto_render()
quarto::quarto_render()
